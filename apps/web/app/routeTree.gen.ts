/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as ContactImport } from './routes/contact'
import { Route as AdminImport } from './routes/admin'
import { Route as AboutImport } from './routes/about'
import { Route as HomeImport } from './routes/_home'
import { Route as AuthImport } from './routes/_auth'
import { Route as GrayolaIndexImport } from './routes/grayola/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as HomeIndexImport } from './routes/_home/index'
import { Route as SettingsPreferencesImport } from './routes/settings/preferences'
import { Route as SettingsIntegrationsImport } from './routes/settings/integrations'
import { Route as SettingsContactImport } from './routes/settings/contact'
import { Route as SettingsAccountImport } from './routes/settings/account'
import { Route as HomeTermsImport } from './routes/_home/terms'
import { Route as HomePrivacyImport } from './routes/_home/privacy'
import { Route as HomeCookiesImport } from './routes/_home/cookies'
import { Route as DemoChatImport } from './routes/_demo/chat'
import { Route as AuthVerifyImport } from './routes/_auth/verify'
import { Route as AuthResetPasswordImport } from './routes/_auth/reset-password'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthIdentifyImport } from './routes/_auth/identify'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as ProposalsExsisIndexImport } from './routes/_proposals/exsis/index'
import { Route as DemoChatIndexImport } from './routes/_demo/chat/index'
import { Route as AdminUsersUserIdImport } from './routes/admin/users/$userId'
import { Route as DemoChatChatIdImport } from './routes/_demo/chat/$chatId'
import { Route as DemoChatAgentsIndexImport } from './routes/_demo/chat/agents/index'
import { Route as DemoChatAgentsCreateImport } from './routes/_demo/chat/agents/create'
import { Route as DemoChatAgentAgentIdImport } from './routes/_demo/chat/agent/$agentId_'
import { Route as DemoChatAgentAgentIdEditImport } from './routes/_demo/chat/agent/$agentId/edit'
import { Route as DemoChatAgentAgentIdChatChatIdImport } from './routes/_demo/chat/agent/$agentId_.chat.$chatId'
import { Route as DemoChatAgentAgentIdEditSkillsImport } from './routes/_demo/chat/agent/$agentId/edit/skills'
import { Route as DemoChatAgentAgentIdEditWorkflowsIndexImport } from './routes/_demo/chat/agent/$agentId/edit/workflows/index'
import { Route as DemoChatAgentAgentIdEditKnowledgeIndexImport } from './routes/_demo/chat/agent/$agentId/edit/knowledge/index'
import { Route as DemoChatAgentAgentIdEditInstructionsIndexImport } from './routes/_demo/chat/agent/$agentId/edit/instructions/index'
import { Route as DemoChatAgentAgentIdEditSkillsNewImport } from './routes/_demo/chat/agent/$agentId/edit/skills/new'
import { Route as DemoChatAgentAgentIdEditSkillsSkillIdImport } from './routes/_demo/chat/agent/$agentId/edit/skills/$skillId'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/_home',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const GrayolaIndexRoute = GrayolaIndexImport.update({
  id: '/grayola/',
  path: '/grayola/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRoute,
} as any)

const SettingsPreferencesRoute = SettingsPreferencesImport.update({
  id: '/preferences',
  path: '/preferences',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsIntegrationsRoute = SettingsIntegrationsImport.update({
  id: '/integrations',
  path: '/integrations',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsContactRoute = SettingsContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsAccountRoute = SettingsAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => SettingsRoute,
} as any)

const HomeTermsRoute = HomeTermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => HomeRoute,
} as any)

const HomePrivacyRoute = HomePrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => HomeRoute,
} as any)

const HomeCookiesRoute = HomeCookiesImport.update({
  id: '/cookies',
  path: '/cookies',
  getParentRoute: () => HomeRoute,
} as any)

const DemoChatRoute = DemoChatImport.update({
  id: '/_demo/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyRoute = AuthVerifyImport.update({
  id: '/verify',
  path: '/verify',
  getParentRoute: () => AuthRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthIdentifyRoute = AuthIdentifyImport.update({
  id: '/identify',
  path: '/identify',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRoute,
} as any)

const ProposalsExsisIndexRoute = ProposalsExsisIndexImport.update({
  id: '/_proposals/exsis/',
  path: '/exsis/',
  getParentRoute: () => rootRoute,
} as any)

const DemoChatIndexRoute = DemoChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DemoChatRoute,
} as any)

const AdminUsersUserIdRoute = AdminUsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => AdminRoute,
} as any)

const DemoChatChatIdRoute = DemoChatChatIdImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => DemoChatRoute,
} as any)

const DemoChatAgentsIndexRoute = DemoChatAgentsIndexImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => DemoChatRoute,
} as any)

const DemoChatAgentsCreateRoute = DemoChatAgentsCreateImport.update({
  id: '/agents/create',
  path: '/agents/create',
  getParentRoute: () => DemoChatRoute,
} as any)

const DemoChatAgentAgentIdRoute = DemoChatAgentAgentIdImport.update({
  id: '/agent/$agentId_',
  path: '/agent/$agentId',
  getParentRoute: () => DemoChatRoute,
} as any)

const DemoChatAgentAgentIdEditRoute = DemoChatAgentAgentIdEditImport.update({
  id: '/agent/$agentId/edit',
  path: '/agent/$agentId/edit',
  getParentRoute: () => DemoChatRoute,
} as any)

const DemoChatAgentAgentIdChatChatIdRoute =
  DemoChatAgentAgentIdChatChatIdImport.update({
    id: '/chat/$chatId',
    path: '/chat/$chatId',
    getParentRoute: () => DemoChatAgentAgentIdRoute,
  } as any)

const DemoChatAgentAgentIdEditSkillsRoute =
  DemoChatAgentAgentIdEditSkillsImport.update({
    id: '/skills',
    path: '/skills',
    getParentRoute: () => DemoChatAgentAgentIdEditRoute,
  } as any)

const DemoChatAgentAgentIdEditWorkflowsIndexRoute =
  DemoChatAgentAgentIdEditWorkflowsIndexImport.update({
    id: '/workflows/',
    path: '/workflows/',
    getParentRoute: () => DemoChatAgentAgentIdEditRoute,
  } as any)

const DemoChatAgentAgentIdEditKnowledgeIndexRoute =
  DemoChatAgentAgentIdEditKnowledgeIndexImport.update({
    id: '/knowledge/',
    path: '/knowledge/',
    getParentRoute: () => DemoChatAgentAgentIdEditRoute,
  } as any)

const DemoChatAgentAgentIdEditInstructionsIndexRoute =
  DemoChatAgentAgentIdEditInstructionsIndexImport.update({
    id: '/instructions/',
    path: '/instructions/',
    getParentRoute: () => DemoChatAgentAgentIdEditRoute,
  } as any)

const DemoChatAgentAgentIdEditSkillsNewRoute =
  DemoChatAgentAgentIdEditSkillsNewImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => DemoChatAgentAgentIdEditSkillsRoute,
  } as any)

const DemoChatAgentAgentIdEditSkillsSkillIdRoute =
  DemoChatAgentAgentIdEditSkillsSkillIdImport.update({
    id: '/$skillId',
    path: '/$skillId',
    getParentRoute: () => DemoChatAgentAgentIdEditSkillsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/identify': {
      id: '/_auth/identify'
      path: '/identify'
      fullPath: '/identify'
      preLoaderRoute: typeof AuthIdentifyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reset-password': {
      id: '/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/verify': {
      id: '/_auth/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof AuthVerifyImport
      parentRoute: typeof AuthImport
    }
    '/_demo/chat': {
      id: '/_demo/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof DemoChatImport
      parentRoute: typeof rootRoute
    }
    '/_home/cookies': {
      id: '/_home/cookies'
      path: '/cookies'
      fullPath: '/cookies'
      preLoaderRoute: typeof HomeCookiesImport
      parentRoute: typeof HomeImport
    }
    '/_home/privacy': {
      id: '/_home/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof HomePrivacyImport
      parentRoute: typeof HomeImport
    }
    '/_home/terms': {
      id: '/_home/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof HomeTermsImport
      parentRoute: typeof HomeImport
    }
    '/settings/account': {
      id: '/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsAccountImport
      parentRoute: typeof SettingsImport
    }
    '/settings/contact': {
      id: '/settings/contact'
      path: '/contact'
      fullPath: '/settings/contact'
      preLoaderRoute: typeof SettingsContactImport
      parentRoute: typeof SettingsImport
    }
    '/settings/integrations': {
      id: '/settings/integrations'
      path: '/integrations'
      fullPath: '/settings/integrations'
      preLoaderRoute: typeof SettingsIntegrationsImport
      parentRoute: typeof SettingsImport
    }
    '/settings/preferences': {
      id: '/settings/preferences'
      path: '/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof SettingsPreferencesImport
      parentRoute: typeof SettingsImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof HomeImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/grayola/': {
      id: '/grayola/'
      path: '/grayola'
      fullPath: '/grayola'
      preLoaderRoute: typeof GrayolaIndexImport
      parentRoute: typeof rootRoute
    }
    '/_demo/chat/$chatId': {
      id: '/_demo/chat/$chatId'
      path: '/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof DemoChatChatIdImport
      parentRoute: typeof DemoChatImport
    }
    '/admin/users/$userId': {
      id: '/admin/users/$userId'
      path: '/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AdminUsersUserIdImport
      parentRoute: typeof AdminImport
    }
    '/_demo/chat/': {
      id: '/_demo/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof DemoChatIndexImport
      parentRoute: typeof DemoChatImport
    }
    '/_proposals/exsis/': {
      id: '/_proposals/exsis/'
      path: '/exsis'
      fullPath: '/exsis'
      preLoaderRoute: typeof ProposalsExsisIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof AdminImport
    }
    '/_demo/chat/agent/$agentId_': {
      id: '/_demo/chat/agent/$agentId_'
      path: '/agent/$agentId'
      fullPath: '/chat/agent/$agentId'
      preLoaderRoute: typeof DemoChatAgentAgentIdImport
      parentRoute: typeof DemoChatImport
    }
    '/_demo/chat/agents/create': {
      id: '/_demo/chat/agents/create'
      path: '/agents/create'
      fullPath: '/chat/agents/create'
      preLoaderRoute: typeof DemoChatAgentsCreateImport
      parentRoute: typeof DemoChatImport
    }
    '/_demo/chat/agents/': {
      id: '/_demo/chat/agents/'
      path: '/agents'
      fullPath: '/chat/agents'
      preLoaderRoute: typeof DemoChatAgentsIndexImport
      parentRoute: typeof DemoChatImport
    }
    '/_demo/chat/agent/$agentId/edit': {
      id: '/_demo/chat/agent/$agentId/edit'
      path: '/agent/$agentId/edit'
      fullPath: '/chat/agent/$agentId/edit'
      preLoaderRoute: typeof DemoChatAgentAgentIdEditImport
      parentRoute: typeof DemoChatImport
    }
    '/_demo/chat/agent/$agentId/edit/skills': {
      id: '/_demo/chat/agent/$agentId/edit/skills'
      path: '/skills'
      fullPath: '/chat/agent/$agentId/edit/skills'
      preLoaderRoute: typeof DemoChatAgentAgentIdEditSkillsImport
      parentRoute: typeof DemoChatAgentAgentIdEditImport
    }
    '/_demo/chat/agent/$agentId_/chat/$chatId': {
      id: '/_demo/chat/agent/$agentId_/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/agent/$agentId/chat/$chatId'
      preLoaderRoute: typeof DemoChatAgentAgentIdChatChatIdImport
      parentRoute: typeof DemoChatAgentAgentIdImport
    }
    '/_demo/chat/agent/$agentId/edit/skills/$skillId': {
      id: '/_demo/chat/agent/$agentId/edit/skills/$skillId'
      path: '/$skillId'
      fullPath: '/chat/agent/$agentId/edit/skills/$skillId'
      preLoaderRoute: typeof DemoChatAgentAgentIdEditSkillsSkillIdImport
      parentRoute: typeof DemoChatAgentAgentIdEditSkillsImport
    }
    '/_demo/chat/agent/$agentId/edit/skills/new': {
      id: '/_demo/chat/agent/$agentId/edit/skills/new'
      path: '/new'
      fullPath: '/chat/agent/$agentId/edit/skills/new'
      preLoaderRoute: typeof DemoChatAgentAgentIdEditSkillsNewImport
      parentRoute: typeof DemoChatAgentAgentIdEditSkillsImport
    }
    '/_demo/chat/agent/$agentId/edit/instructions/': {
      id: '/_demo/chat/agent/$agentId/edit/instructions/'
      path: '/instructions'
      fullPath: '/chat/agent/$agentId/edit/instructions'
      preLoaderRoute: typeof DemoChatAgentAgentIdEditInstructionsIndexImport
      parentRoute: typeof DemoChatAgentAgentIdEditImport
    }
    '/_demo/chat/agent/$agentId/edit/knowledge/': {
      id: '/_demo/chat/agent/$agentId/edit/knowledge/'
      path: '/knowledge'
      fullPath: '/chat/agent/$agentId/edit/knowledge'
      preLoaderRoute: typeof DemoChatAgentAgentIdEditKnowledgeIndexImport
      parentRoute: typeof DemoChatAgentAgentIdEditImport
    }
    '/_demo/chat/agent/$agentId/edit/workflows/': {
      id: '/_demo/chat/agent/$agentId/edit/workflows/'
      path: '/workflows'
      fullPath: '/chat/agent/$agentId/edit/workflows'
      preLoaderRoute: typeof DemoChatAgentAgentIdEditWorkflowsIndexImport
      parentRoute: typeof DemoChatAgentAgentIdEditImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthIdentifyRoute: typeof AuthIdentifyRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthIdentifyRoute: AuthIdentifyRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyRoute: AuthVerifyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface HomeRouteChildren {
  HomeCookiesRoute: typeof HomeCookiesRoute
  HomePrivacyRoute: typeof HomePrivacyRoute
  HomeTermsRoute: typeof HomeTermsRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeCookiesRoute: HomeCookiesRoute,
  HomePrivacyRoute: HomePrivacyRoute,
  HomeTermsRoute: HomeTermsRoute,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

interface AdminRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminUsersUserIdRoute: typeof AdminUsersUserIdRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminUsersUserIdRoute: AdminUsersUserIdRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface SettingsRouteChildren {
  SettingsAccountRoute: typeof SettingsAccountRoute
  SettingsContactRoute: typeof SettingsContactRoute
  SettingsIntegrationsRoute: typeof SettingsIntegrationsRoute
  SettingsPreferencesRoute: typeof SettingsPreferencesRoute
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsAccountRoute: SettingsAccountRoute,
  SettingsContactRoute: SettingsContactRoute,
  SettingsIntegrationsRoute: SettingsIntegrationsRoute,
  SettingsPreferencesRoute: SettingsPreferencesRoute,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

interface DemoChatAgentAgentIdRouteChildren {
  DemoChatAgentAgentIdChatChatIdRoute: typeof DemoChatAgentAgentIdChatChatIdRoute
}

const DemoChatAgentAgentIdRouteChildren: DemoChatAgentAgentIdRouteChildren = {
  DemoChatAgentAgentIdChatChatIdRoute: DemoChatAgentAgentIdChatChatIdRoute,
}

const DemoChatAgentAgentIdRouteWithChildren =
  DemoChatAgentAgentIdRoute._addFileChildren(DemoChatAgentAgentIdRouteChildren)

interface DemoChatAgentAgentIdEditSkillsRouteChildren {
  DemoChatAgentAgentIdEditSkillsSkillIdRoute: typeof DemoChatAgentAgentIdEditSkillsSkillIdRoute
  DemoChatAgentAgentIdEditSkillsNewRoute: typeof DemoChatAgentAgentIdEditSkillsNewRoute
}

const DemoChatAgentAgentIdEditSkillsRouteChildren: DemoChatAgentAgentIdEditSkillsRouteChildren =
  {
    DemoChatAgentAgentIdEditSkillsSkillIdRoute:
      DemoChatAgentAgentIdEditSkillsSkillIdRoute,
    DemoChatAgentAgentIdEditSkillsNewRoute:
      DemoChatAgentAgentIdEditSkillsNewRoute,
  }

const DemoChatAgentAgentIdEditSkillsRouteWithChildren =
  DemoChatAgentAgentIdEditSkillsRoute._addFileChildren(
    DemoChatAgentAgentIdEditSkillsRouteChildren,
  )

interface DemoChatAgentAgentIdEditRouteChildren {
  DemoChatAgentAgentIdEditSkillsRoute: typeof DemoChatAgentAgentIdEditSkillsRouteWithChildren
  DemoChatAgentAgentIdEditInstructionsIndexRoute: typeof DemoChatAgentAgentIdEditInstructionsIndexRoute
  DemoChatAgentAgentIdEditKnowledgeIndexRoute: typeof DemoChatAgentAgentIdEditKnowledgeIndexRoute
  DemoChatAgentAgentIdEditWorkflowsIndexRoute: typeof DemoChatAgentAgentIdEditWorkflowsIndexRoute
}

const DemoChatAgentAgentIdEditRouteChildren: DemoChatAgentAgentIdEditRouteChildren =
  {
    DemoChatAgentAgentIdEditSkillsRoute:
      DemoChatAgentAgentIdEditSkillsRouteWithChildren,
    DemoChatAgentAgentIdEditInstructionsIndexRoute:
      DemoChatAgentAgentIdEditInstructionsIndexRoute,
    DemoChatAgentAgentIdEditKnowledgeIndexRoute:
      DemoChatAgentAgentIdEditKnowledgeIndexRoute,
    DemoChatAgentAgentIdEditWorkflowsIndexRoute:
      DemoChatAgentAgentIdEditWorkflowsIndexRoute,
  }

const DemoChatAgentAgentIdEditRouteWithChildren =
  DemoChatAgentAgentIdEditRoute._addFileChildren(
    DemoChatAgentAgentIdEditRouteChildren,
  )

interface DemoChatRouteChildren {
  DemoChatChatIdRoute: typeof DemoChatChatIdRoute
  DemoChatIndexRoute: typeof DemoChatIndexRoute
  DemoChatAgentAgentIdRoute: typeof DemoChatAgentAgentIdRouteWithChildren
  DemoChatAgentsCreateRoute: typeof DemoChatAgentsCreateRoute
  DemoChatAgentsIndexRoute: typeof DemoChatAgentsIndexRoute
  DemoChatAgentAgentIdEditRoute: typeof DemoChatAgentAgentIdEditRouteWithChildren
}

const DemoChatRouteChildren: DemoChatRouteChildren = {
  DemoChatChatIdRoute: DemoChatChatIdRoute,
  DemoChatIndexRoute: DemoChatIndexRoute,
  DemoChatAgentAgentIdRoute: DemoChatAgentAgentIdRouteWithChildren,
  DemoChatAgentsCreateRoute: DemoChatAgentsCreateRoute,
  DemoChatAgentsIndexRoute: DemoChatAgentsIndexRoute,
  DemoChatAgentAgentIdEditRoute: DemoChatAgentAgentIdEditRouteWithChildren,
}

const DemoChatRouteWithChildren = DemoChatRoute._addFileChildren(
  DemoChatRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof HomeRouteWithChildren
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/contact': typeof ContactRoute
  '/settings': typeof SettingsRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/identify': typeof AuthIdentifyRoute
  '/register': typeof AuthRegisterRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/verify': typeof AuthVerifyRoute
  '/chat': typeof DemoChatRouteWithChildren
  '/cookies': typeof HomeCookiesRoute
  '/privacy': typeof HomePrivacyRoute
  '/terms': typeof HomeTermsRoute
  '/settings/account': typeof SettingsAccountRoute
  '/settings/contact': typeof SettingsContactRoute
  '/settings/integrations': typeof SettingsIntegrationsRoute
  '/settings/preferences': typeof SettingsPreferencesRoute
  '/': typeof HomeIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/grayola': typeof GrayolaIndexRoute
  '/chat/$chatId': typeof DemoChatChatIdRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/chat/': typeof DemoChatIndexRoute
  '/exsis': typeof ProposalsExsisIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/chat/agent/$agentId': typeof DemoChatAgentAgentIdRouteWithChildren
  '/chat/agents/create': typeof DemoChatAgentsCreateRoute
  '/chat/agents': typeof DemoChatAgentsIndexRoute
  '/chat/agent/$agentId/edit': typeof DemoChatAgentAgentIdEditRouteWithChildren
  '/chat/agent/$agentId/edit/skills': typeof DemoChatAgentAgentIdEditSkillsRouteWithChildren
  '/chat/agent/$agentId/chat/$chatId': typeof DemoChatAgentAgentIdChatChatIdRoute
  '/chat/agent/$agentId/edit/skills/$skillId': typeof DemoChatAgentAgentIdEditSkillsSkillIdRoute
  '/chat/agent/$agentId/edit/skills/new': typeof DemoChatAgentAgentIdEditSkillsNewRoute
  '/chat/agent/$agentId/edit/instructions': typeof DemoChatAgentAgentIdEditInstructionsIndexRoute
  '/chat/agent/$agentId/edit/knowledge': typeof DemoChatAgentAgentIdEditKnowledgeIndexRoute
  '/chat/agent/$agentId/edit/workflows': typeof DemoChatAgentAgentIdEditWorkflowsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/settings': typeof SettingsRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/identify': typeof AuthIdentifyRoute
  '/register': typeof AuthRegisterRoute
  '/reset-password': typeof AuthResetPasswordRoute
  '/verify': typeof AuthVerifyRoute
  '/cookies': typeof HomeCookiesRoute
  '/privacy': typeof HomePrivacyRoute
  '/terms': typeof HomeTermsRoute
  '/settings/account': typeof SettingsAccountRoute
  '/settings/contact': typeof SettingsContactRoute
  '/settings/integrations': typeof SettingsIntegrationsRoute
  '/settings/preferences': typeof SettingsPreferencesRoute
  '/': typeof HomeIndexRoute
  '/admin': typeof AdminIndexRoute
  '/grayola': typeof GrayolaIndexRoute
  '/chat/$chatId': typeof DemoChatChatIdRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/chat': typeof DemoChatIndexRoute
  '/exsis': typeof ProposalsExsisIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/chat/agent/$agentId': typeof DemoChatAgentAgentIdRouteWithChildren
  '/chat/agents/create': typeof DemoChatAgentsCreateRoute
  '/chat/agents': typeof DemoChatAgentsIndexRoute
  '/chat/agent/$agentId/edit': typeof DemoChatAgentAgentIdEditRouteWithChildren
  '/chat/agent/$agentId/edit/skills': typeof DemoChatAgentAgentIdEditSkillsRouteWithChildren
  '/chat/agent/$agentId/chat/$chatId': typeof DemoChatAgentAgentIdChatChatIdRoute
  '/chat/agent/$agentId/edit/skills/$skillId': typeof DemoChatAgentAgentIdEditSkillsSkillIdRoute
  '/chat/agent/$agentId/edit/skills/new': typeof DemoChatAgentAgentIdEditSkillsNewRoute
  '/chat/agent/$agentId/edit/instructions': typeof DemoChatAgentAgentIdEditInstructionsIndexRoute
  '/chat/agent/$agentId/edit/knowledge': typeof DemoChatAgentAgentIdEditKnowledgeIndexRoute
  '/chat/agent/$agentId/edit/workflows': typeof DemoChatAgentAgentIdEditWorkflowsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_home': typeof HomeRouteWithChildren
  '/about': typeof AboutRoute
  '/admin': typeof AdminRouteWithChildren
  '/contact': typeof ContactRoute
  '/settings': typeof SettingsRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/identify': typeof AuthIdentifyRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_auth/reset-password': typeof AuthResetPasswordRoute
  '/_auth/verify': typeof AuthVerifyRoute
  '/_demo/chat': typeof DemoChatRouteWithChildren
  '/_home/cookies': typeof HomeCookiesRoute
  '/_home/privacy': typeof HomePrivacyRoute
  '/_home/terms': typeof HomeTermsRoute
  '/settings/account': typeof SettingsAccountRoute
  '/settings/contact': typeof SettingsContactRoute
  '/settings/integrations': typeof SettingsIntegrationsRoute
  '/settings/preferences': typeof SettingsPreferencesRoute
  '/_home/': typeof HomeIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/grayola/': typeof GrayolaIndexRoute
  '/_demo/chat/$chatId': typeof DemoChatChatIdRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/_demo/chat/': typeof DemoChatIndexRoute
  '/_proposals/exsis/': typeof ProposalsExsisIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/_demo/chat/agent/$agentId_': typeof DemoChatAgentAgentIdRouteWithChildren
  '/_demo/chat/agents/create': typeof DemoChatAgentsCreateRoute
  '/_demo/chat/agents/': typeof DemoChatAgentsIndexRoute
  '/_demo/chat/agent/$agentId/edit': typeof DemoChatAgentAgentIdEditRouteWithChildren
  '/_demo/chat/agent/$agentId/edit/skills': typeof DemoChatAgentAgentIdEditSkillsRouteWithChildren
  '/_demo/chat/agent/$agentId_/chat/$chatId': typeof DemoChatAgentAgentIdChatChatIdRoute
  '/_demo/chat/agent/$agentId/edit/skills/$skillId': typeof DemoChatAgentAgentIdEditSkillsSkillIdRoute
  '/_demo/chat/agent/$agentId/edit/skills/new': typeof DemoChatAgentAgentIdEditSkillsNewRoute
  '/_demo/chat/agent/$agentId/edit/instructions/': typeof DemoChatAgentAgentIdEditInstructionsIndexRoute
  '/_demo/chat/agent/$agentId/edit/knowledge/': typeof DemoChatAgentAgentIdEditKnowledgeIndexRoute
  '/_demo/chat/agent/$agentId/edit/workflows/': typeof DemoChatAgentAgentIdEditWorkflowsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/admin'
    | '/contact'
    | '/settings'
    | '/forgot-password'
    | '/identify'
    | '/register'
    | '/reset-password'
    | '/verify'
    | '/chat'
    | '/cookies'
    | '/privacy'
    | '/terms'
    | '/settings/account'
    | '/settings/contact'
    | '/settings/integrations'
    | '/settings/preferences'
    | '/'
    | '/admin/'
    | '/grayola'
    | '/chat/$chatId'
    | '/admin/users/$userId'
    | '/chat/'
    | '/exsis'
    | '/admin/users'
    | '/chat/agent/$agentId'
    | '/chat/agents/create'
    | '/chat/agents'
    | '/chat/agent/$agentId/edit'
    | '/chat/agent/$agentId/edit/skills'
    | '/chat/agent/$agentId/chat/$chatId'
    | '/chat/agent/$agentId/edit/skills/$skillId'
    | '/chat/agent/$agentId/edit/skills/new'
    | '/chat/agent/$agentId/edit/instructions'
    | '/chat/agent/$agentId/edit/knowledge'
    | '/chat/agent/$agentId/edit/workflows'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/about'
    | '/contact'
    | '/settings'
    | '/forgot-password'
    | '/identify'
    | '/register'
    | '/reset-password'
    | '/verify'
    | '/cookies'
    | '/privacy'
    | '/terms'
    | '/settings/account'
    | '/settings/contact'
    | '/settings/integrations'
    | '/settings/preferences'
    | '/'
    | '/admin'
    | '/grayola'
    | '/chat/$chatId'
    | '/admin/users/$userId'
    | '/chat'
    | '/exsis'
    | '/admin/users'
    | '/chat/agent/$agentId'
    | '/chat/agents/create'
    | '/chat/agents'
    | '/chat/agent/$agentId/edit'
    | '/chat/agent/$agentId/edit/skills'
    | '/chat/agent/$agentId/chat/$chatId'
    | '/chat/agent/$agentId/edit/skills/$skillId'
    | '/chat/agent/$agentId/edit/skills/new'
    | '/chat/agent/$agentId/edit/instructions'
    | '/chat/agent/$agentId/edit/knowledge'
    | '/chat/agent/$agentId/edit/workflows'
  id:
    | '__root__'
    | '/_auth'
    | '/_home'
    | '/about'
    | '/admin'
    | '/contact'
    | '/settings'
    | '/_auth/forgot-password'
    | '/_auth/identify'
    | '/_auth/register'
    | '/_auth/reset-password'
    | '/_auth/verify'
    | '/_demo/chat'
    | '/_home/cookies'
    | '/_home/privacy'
    | '/_home/terms'
    | '/settings/account'
    | '/settings/contact'
    | '/settings/integrations'
    | '/settings/preferences'
    | '/_home/'
    | '/admin/'
    | '/grayola/'
    | '/_demo/chat/$chatId'
    | '/admin/users/$userId'
    | '/_demo/chat/'
    | '/_proposals/exsis/'
    | '/admin/users/'
    | '/_demo/chat/agent/$agentId_'
    | '/_demo/chat/agents/create'
    | '/_demo/chat/agents/'
    | '/_demo/chat/agent/$agentId/edit'
    | '/_demo/chat/agent/$agentId/edit/skills'
    | '/_demo/chat/agent/$agentId_/chat/$chatId'
    | '/_demo/chat/agent/$agentId/edit/skills/$skillId'
    | '/_demo/chat/agent/$agentId/edit/skills/new'
    | '/_demo/chat/agent/$agentId/edit/instructions/'
    | '/_demo/chat/agent/$agentId/edit/knowledge/'
    | '/_demo/chat/agent/$agentId/edit/workflows/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  HomeRoute: typeof HomeRouteWithChildren
  AboutRoute: typeof AboutRoute
  AdminRoute: typeof AdminRouteWithChildren
  ContactRoute: typeof ContactRoute
  SettingsRoute: typeof SettingsRouteWithChildren
  DemoChatRoute: typeof DemoChatRouteWithChildren
  GrayolaIndexRoute: typeof GrayolaIndexRoute
  ProposalsExsisIndexRoute: typeof ProposalsExsisIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  HomeRoute: HomeRouteWithChildren,
  AboutRoute: AboutRoute,
  AdminRoute: AdminRouteWithChildren,
  ContactRoute: ContactRoute,
  SettingsRoute: SettingsRouteWithChildren,
  DemoChatRoute: DemoChatRouteWithChildren,
  GrayolaIndexRoute: GrayolaIndexRoute,
  ProposalsExsisIndexRoute: ProposalsExsisIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_home",
        "/about",
        "/admin",
        "/contact",
        "/settings",
        "/_demo/chat",
        "/grayola/",
        "/_proposals/exsis/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/forgot-password",
        "/_auth/identify",
        "/_auth/register",
        "/_auth/reset-password",
        "/_auth/verify"
      ]
    },
    "/_home": {
      "filePath": "_home.tsx",
      "children": [
        "/_home/cookies",
        "/_home/privacy",
        "/_home/terms",
        "/_home/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/",
        "/admin/users/$userId",
        "/admin/users/"
      ]
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx",
      "children": [
        "/settings/account",
        "/settings/contact",
        "/settings/integrations",
        "/settings/preferences"
      ]
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/identify": {
      "filePath": "_auth/identify.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_auth/reset-password": {
      "filePath": "_auth/reset-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/verify": {
      "filePath": "_auth/verify.tsx",
      "parent": "/_auth"
    },
    "/_demo/chat": {
      "filePath": "_demo/chat.tsx",
      "children": [
        "/_demo/chat/$chatId",
        "/_demo/chat/",
        "/_demo/chat/agent/$agentId_",
        "/_demo/chat/agents/create",
        "/_demo/chat/agents/",
        "/_demo/chat/agent/$agentId/edit"
      ]
    },
    "/_home/cookies": {
      "filePath": "_home/cookies.tsx",
      "parent": "/_home"
    },
    "/_home/privacy": {
      "filePath": "_home/privacy.tsx",
      "parent": "/_home"
    },
    "/_home/terms": {
      "filePath": "_home/terms.tsx",
      "parent": "/_home"
    },
    "/settings/account": {
      "filePath": "settings/account.tsx",
      "parent": "/settings"
    },
    "/settings/contact": {
      "filePath": "settings/contact.tsx",
      "parent": "/settings"
    },
    "/settings/integrations": {
      "filePath": "settings/integrations.tsx",
      "parent": "/settings"
    },
    "/settings/preferences": {
      "filePath": "settings/preferences.tsx",
      "parent": "/settings"
    },
    "/_home/": {
      "filePath": "_home/index.tsx",
      "parent": "/_home"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/grayola/": {
      "filePath": "grayola/index.tsx"
    },
    "/_demo/chat/$chatId": {
      "filePath": "_demo/chat/$chatId.tsx",
      "parent": "/_demo/chat"
    },
    "/admin/users/$userId": {
      "filePath": "admin/users/$userId.tsx",
      "parent": "/admin"
    },
    "/_demo/chat/": {
      "filePath": "_demo/chat/index.tsx",
      "parent": "/_demo/chat"
    },
    "/_proposals/exsis/": {
      "filePath": "_proposals/exsis/index.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx",
      "parent": "/admin"
    },
    "/_demo/chat/agent/$agentId_": {
      "filePath": "_demo/chat/agent/$agentId_.tsx",
      "parent": "/_demo/chat",
      "children": [
        "/_demo/chat/agent/$agentId_/chat/$chatId"
      ]
    },
    "/_demo/chat/agents/create": {
      "filePath": "_demo/chat/agents/create.tsx",
      "parent": "/_demo/chat"
    },
    "/_demo/chat/agents/": {
      "filePath": "_demo/chat/agents/index.tsx",
      "parent": "/_demo/chat"
    },
    "/_demo/chat/agent/$agentId/edit": {
      "filePath": "_demo/chat/agent/$agentId/edit.tsx",
      "parent": "/_demo/chat",
      "children": [
        "/_demo/chat/agent/$agentId/edit/skills",
        "/_demo/chat/agent/$agentId/edit/instructions/",
        "/_demo/chat/agent/$agentId/edit/knowledge/",
        "/_demo/chat/agent/$agentId/edit/workflows/"
      ]
    },
    "/_demo/chat/agent/$agentId/edit/skills": {
      "filePath": "_demo/chat/agent/$agentId/edit/skills.tsx",
      "parent": "/_demo/chat/agent/$agentId/edit",
      "children": [
        "/_demo/chat/agent/$agentId/edit/skills/$skillId",
        "/_demo/chat/agent/$agentId/edit/skills/new"
      ]
    },
    "/_demo/chat/agent/$agentId_/chat/$chatId": {
      "filePath": "_demo/chat/agent/$agentId_.chat.$chatId.tsx",
      "parent": "/_demo/chat/agent/$agentId_"
    },
    "/_demo/chat/agent/$agentId/edit/skills/$skillId": {
      "filePath": "_demo/chat/agent/$agentId/edit/skills/$skillId.tsx",
      "parent": "/_demo/chat/agent/$agentId/edit/skills"
    },
    "/_demo/chat/agent/$agentId/edit/skills/new": {
      "filePath": "_demo/chat/agent/$agentId/edit/skills/new.tsx",
      "parent": "/_demo/chat/agent/$agentId/edit/skills"
    },
    "/_demo/chat/agent/$agentId/edit/instructions/": {
      "filePath": "_demo/chat/agent/$agentId/edit/instructions/index.tsx",
      "parent": "/_demo/chat/agent/$agentId/edit"
    },
    "/_demo/chat/agent/$agentId/edit/knowledge/": {
      "filePath": "_demo/chat/agent/$agentId/edit/knowledge/index.tsx",
      "parent": "/_demo/chat/agent/$agentId/edit"
    },
    "/_demo/chat/agent/$agentId/edit/workflows/": {
      "filePath": "_demo/chat/agent/$agentId/edit/workflows/index.tsx",
      "parent": "/_demo/chat/agent/$agentId/edit"
    }
  }
}
ROUTE_MANIFEST_END */
